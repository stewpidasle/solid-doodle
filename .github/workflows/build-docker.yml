on:
  push:
    branches: [ "dev-test", "main-test" ] # TODO: change to dev and main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUN_VERSION: '1.2.14'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: Install dependencies and build
      run: |
        bun install --frozen-lockfile
        bun run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SENTRY_LOG_LEVEL: debug

    - name: List build output
      run: |
        echo "Contents of .output directory:"
        ls -la .output/
        echo "Server files:"
        ls -la .output/server/
        echo "Total size:"
        du -sh .output/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: .output/
        retention-days: 1

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
        path: ./.output

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ vars.DEPLOYMENT_URL }}

    steps:
    - name: Deploy to production
      run: |
        echo "Deploying image: ${{ needs.build.outputs.image-tag }}"
        echo "Image digest: ${{ needs.build.outputs.image-digest }}"
        echo "Add your deployment commands here (e.g., kubectl, docker-compose, etc.)"
